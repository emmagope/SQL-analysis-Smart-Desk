USE WAREHOUSE CHIPMUNK_WH;
USE DATABASE CHIPMUNK_DB;
USE SCHEMA MY_SCHEMA;

-- 1. Análisis de Ventas y Beneficio por Categoría de Producto para Adabs Entertainment en 2020
SELECT 
    CATEGORY,
    SUM(MAINTENANCE) AS MANTENIMIENTO,
    SUM(PARTS) AS PARTES,
    SUM(PRODUCT) AS PRODUCTO,
    SUM(SUPPORT) AS SOPORTE,
    SUM(TOTAL) AS VENTAS_TOTALES,
    SUM(UNITS_SOLD) AS UNIDADES_VENDIDAS,
    SUM(PROFIT) AS BENEFICIO_TOTAL
FROM SALES
WHERE ACCOUNT = 'Adabs Entertainment' AND Year = 2020
GROUP BY CATEGORY; 


-- 2. Comparación de Ventas, Unidades Vendidas y Beneficio entre Industrias en las regiones APAC y EMEA
SELECT 
    A.INDUSTRY,
    A.REGION,
    SUM(PRODUCT) AS INGRESO_POR_PRODUCTO,
    SUM(UNITS_SOLD) AS UNIDADES_VENDIDAS, 
    SUM(PROFIT) AS BENEFICIO_TOTAL, 
    AVG(PROFIT) AS BENEFICIO_PROMEDIO
FROM SALES AS S INNER JOIN ACCOUNTS AS A 
ON S.ACCOUNT= A.ACCOUNT
WHERE A.REGION IN ('APAC', 'EMEA')
GROUP BY A.INDUSTRY, A.REGION 
ORDER BY(2, 1);


 -- 3. Clasificación de Beneficio por Tipo de Empresa 
SELECT 
    A.INDUSTRY AS TIPO_DE_EMPRESA,
    SUM(S.PROFIT) AS BENEFICIO_TOTAL,
CASE
    WHEN SUM(S.PROFIT) > 1000000
        THEN 'Alto'
    WHEN SUM(S.PROFIT) <= 1000000
        THEN 'Normal'
    ELSE 'No hay datos'
END AS CLASIFICACION_BENEFICIO
FROM SALES AS S 
INNER JOIN ACCOUNTS AS A ON S.ACCOUNT = A.ACCOUNT
WHERE S.ACCOUNT IN(
            SELECT ACCOUNT
            FROM FORECASTS
            GROUP BY ACCOUNT
            HAVING SUM(FORECAST)>500000)
GROUP BY A.INDUSTRY;


-- 4. Comparación de Beneficios para Diferentes Años 

-- Primero creo una view para simplificar 

CREATE OR REPLACE VIEW BENEFICOS_POR_CATEGORIA AS 
SELECT 
    COALESCE(S.CATEGORY, F.CATEGORY) AS CATEGORIA_PRODUCTOS, 
    SUM(S.PROFIT) AS BENEFICIO_TOTAL_REAL,
    SUM(F.FORECAST) AS "PRONÓSTICO_TOTAL_2022",
    MIN(F.OPPORTUNITY_AGE) AS OPORT_RECIENTE, 
    MAX(F.OPPORTUNITY_AGE) AS OPORT_ANTIGUA
FROM SALES AS S
FULL OUTER JOIN 
    FORECASTS AS F ON S.CATEGORY = F.CATEGORY AND S.YEAR = F.YEAR
WHERE 
     (S.YEAR= 2020 AND S.QUARTER_OF_YEAR = 'Q1') OR 
     (S.YEAR= 2021 AND S.QUARTER_OF_YEAR = 'Q3') OR 
     F.YEAR= 2022
GROUP BY COALESCE(S.CATEGORY, F.CATEGORY);

SELECT * FROM BENEFICOS_POR_CATEGORIA;


-- 5. Cálculo del Beneficio Acumulado por Trimestre y por Industria                                               

-- Primero creo una view para simplificar

CREATE OR REPLACE VIEW BENEFICIOS_POR_INDUSTRIA(
	INDUSTRY,
	QUARTER,
	PROFIT,
	FORECAST,
	PROFIT_ACUMULADO,
	FORE_ACUMULADO
) AS
SELECT Industry, 
       Quarter,
       Profit,
       Forecast,
       SUM(Profit) OVER (PARTITION BY Industry ORDER BY Quarter) AS PROFIT_ACUMULADO,
       SUM(Forecast) OVER (PARTITION BY Industry) AS FORE_ACUMULADO,
FROM SALES S
JOIN Accounts A ON S.Account = A.Account
JOIN FORECASTS F ON F.Account = S.Account;

-- Mostar el beneficio total y promedio

SELECT
    INDUSTRY,
    QUARTER,
    SUM(PROFIT) AS BENEF,
    AVG(PROFIT) AS PROMEDIO_PROFIT,
    SUM(PROFIT_ACUMULADO) AS BENEF_ACUMU,
    SUM(FORECAST) AS FORE,
    AVG(FORECAST) AS PROMEDIO_FORE,
    SUM(FORE_ACUMULADO) AS FORE_ACUMU,
FROM
    BENEFICIOS_POR_INDUSTRIA
GROUP BY
    1,2
ORDER BY
    INDUSTRY,
    QUARTER;


-- Caso Práctico: Análisis Libre
-- Hipótesis Inicial: La demanda de ciertos productos y servicios varía significativamente por región

--1.Creación de una vista para simplificar las consultas 
CREATE OR REPLACE VIEW SALES_ACCOUNT AS 
SELECT 
    S.ACCOUNT,
    S.CATEGORY,
    S.PROFIT,
    S.YEAR, 
    S.QUARTER_OF_YEAR,
    S.UNITS_SOLD,
    S.PRODUCT,
    A.REGION, 
    A.INDUSTRY, 
FROM SALES AS S INNER JOIN ACCOUNTS AS A ON S.ACCOUNT = A.ACCOUNT;

SELECT * FROM SALES_ACCOUNT;

-- 1. Análisis Exploratorio
-- Análisis de los beneficios promedio y totales y el número de ventas por regiones 
SELECT 
    REGION, 
    AVG(PROFIT) AS BENEFICIO_PROMEDIO,
    SUM(PROFIT) AS BENEFICO_TOTAL,
    COUNT(*) AS NUMERO_DE_VENTAS
FROM SALES_ACCOUNT
GROUP BY REGION;

--2. Desarrollo del análisis 
-- Análisis de los beneficios totales y el número de ventas para cada categoría por regiones 
SELECT 
    REGION,
    CATEGORY, 
    SUM(PROFIT) AS BENEFICIO_TOTAL,
    COUNT(*) AS NUMERO_DE_VENTAS
FROM SALES_ACCOUNT
GROUP BY REGION, CATEGORY;

-- Clasificación en rentabilidad de las categorías por regiones

WITH BENEFICIOS_CATEGORIAS AS (
    SELECT
        A.REGION,
        S.CATEGORY,
        AVG(S.PROFIT) AS BENEFICIO_PROMD_CATEGORIA
    FROM SALES AS S
    JOIN ACCOUNTS AS A ON S.ACCOUNT = A.ACCOUNT
    GROUP BY A.REGION, S.CATEGORY
),
BENEFICIOS AS (
SELECT
    REGION,
    CATEGORY,
    BENEFICIO_PROMD_CATEGORIA,
    AVG(BENEFICIO_PROMD_CATEGORIA) OVER (PARTITION BY REGION) AS BENEFICIO_PROMD_REGION
FROM BENEFICIOS_CATEGORIAS
)
SELECT 
    REGION, 
    CATEGORY, 
    BENEFICIO_PROMD_CATEGORIA, 
    BENEFICIO_PROMD_REGION,
    CASE 
        WHEN BENEFICIO_PROMD_CATEGORIA >= BENEFICIO_PROMD_REGION THEN 'Rentable'
        WHEN BENEFICIO_PROMD_CATEGORIA < BENEFICIO_PROMD_REGION THEN 'Mejorable'
        ELSE 'No hay datos'
    END AS RENTABILIDAD 
FROM BENEFICIOS 
ORDER BY REGION, CATEGORY;

